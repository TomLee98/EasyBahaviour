function [hTime, hScale, hSpeed, hMeta, hBoxes, hTrace] = initComponentsOn(ax, vis)
%INITCOMPONENTSON This function create components on given ax
% ax should be uiaxes or axes object handle

if ~exist("ax", "var") || isempty(ax) || ...
        (~isa(ax, "matlab.ui.control.UIAxes")&&~isa(ax,"matlab.graphics.axis.Axes")) 
    figure; %
    ax = gca;
end
if ~exist("vis", "var") || isempty(vis) || ~isstring(vis) || ~ismember(vis, ["on","off"])
    vis = "off";
end

%% Init Ax Appearance
ax.Visible = vis;
ax.Toolbar = [];
disableDefaultInteractivity(ax);
ax.XLim = [0.5, EBScreenLayout.INIT_SCREEN_SIZE.Value(1)+0.5];
ax.YLim = [0.5, EBScreenLayout.INIT_SCREEN_SIZE.Value(2)+0.5];
% adjust aspect ratio
pbaspect(ax, [EBScreenLayout.INIT_SCREEN_SIZE.Value(1), ...
              EBScreenLayout.INIT_SCREEN_SIZE.Value(2),...
              1]);

% set grayscale
colormap(ax, "gray");

% !!! HOLD ONNNNN
hold(ax, "on");

%% Init Add-ons
% time stamp
hTime = text(ax, ...
    EBScreenLayout.TIMESTAMP_OFFSET_X.Value, ...
    EBScreenLayout.TIMESTAMP_OFFSET_Y.Value, ...
    "00:00:00.0", "FontSize", 18, ...
    "Color", "y", "FontWeight","normal",...
    "HorizontalAlignment","left", ...
    "VerticalAlignment","top", ...
    "Visible",vis, ...
    "Tag","time");

% scale line
XX = [EBScreenLayout.SCALE_OFFSET_X.Value, EBScreenLayout.SCALE_OFFSET_X.Value + 100];
YY = [EBScreenLayout.INIT_SCREEN_SIZE.Value(2) - EBScreenLayout.SCALE_OFFSET_Y.Value, ...
    EBScreenLayout.INIT_SCREEN_SIZE.Value(2) - EBScreenLayout.SCALE_OFFSET_Y.Value];
hScale.seglin = line(ax, ...
    XX, YY, ...
    "Color","w", ...
    "LineWidth",1, ...
    "Marker","|", ...
    "MarkerSize", 5, ...
    "Visible", vis, ...
    "Tag", "scalebar");
% scale txt
hScale.txt = text(ax, ...
    EBScreenLayout.SCALE_OFFSET_X.Value + 50, ...
    EBScreenLayout.INIT_SCREEN_SIZE.Value(2) - EBScreenLayout.SCALE_OFFSET_Y.Value + 15, ...
    "1 cm", "FontSize",14, ...
    "Color","w", "FontWeight","normal", ...
    "HorizontalAlignment","center", ...
    "VerticalAlignment","bottom", ...
    "Visible",vis, ...
    "Tag","scaletxt");

% play speed
hSpeed = text(ax, ...
    EBScreenLayout.INIT_SCREEN_SIZE.Value(1) - EBScreenLayout.SPEED_OFFSET_X.Value, ...
    EBScreenLayout.SPEED_OFFSET_Y.Value, ...
    "Play@0.05X", "FontSize",18, ...
    "Color","r", "FontWeight","normal", ...
    "HorizontalAlignment","right", ...
    "VerticalAlignment","top", ...
    "Visible",vis, ...
    "Tag","speed");

% meta data
hMeta = text(ax, ...
    EBScreenLayout.INIT_SCREEN_SIZE.Value(1) - EBScreenLayout.METADATA_OFFSET_X.Value, ...
    EBScreenLayout.INIT_SCREEN_SIZE.Value(2) - EBScreenLayout.METADATA_OFFSET_Y.Value, ...
    "Code: ", "FontSize",18, ...
    "Color","g", "FontWeight","normal", ...
    "HorizontalAlignment", "right", ...
    "VerticalAlignment", "bottom", ...
    "Visible",vis, ...
    "Tag","meta");

% detect boxes
hBoxes = patch(ax, ...
    [0;0;1;1], ...
    [1;0;0;1], ...
    [0,0,0], ...
    "EdgeColor", "green", ...
    "FaceColor", "none", ...
    "LineWidth", 1, ...
    "Visible", vis, ...
    "Tag", "boxes");

% trajectory
hTrace = configureDictionary("string", "cell");  % empty, wait for new trace
end

